{"version":3,"sources":["components/spinner/spinner.styles.js","components/spinner/spinner.component.jsx","redux/search/search.types.js","components/error-boundary/error-boundary.component.jsx","assets/images/error.png","components/error/error.styles.js","components/error/error.component.jsx","redux/images/images.types.js","redux/create-reducer.js","redux/dimensions/dimensions.reducer.js","redux/dimensions/dimensions.types.js","redux/theme/theme.reducer.js","redux/theme/theme.types.js","redux/search/search.reducer.js","redux/images/images.reducer.js","redux/root-reducer.js","api/api.js","config/consts.js","redux/images/images.sagas.js","redux/root-saga.js","redux/store.js","config/theme.jsx","containers/app/app.container.jsx","redux/dimensions/dimensions.actions.js","utils/styles/global-styles.js","config/root.jsx","index.jsx"],"names":["SpinnerOverlay","styled","div","SpinnerContainer","Spinner","ON_SEARCH_CHANGE","ErrorBoundary","state","hasErrored","this","children","props","height","Component","module","exports","ErrorContainer","ErrorImage","imageUrl","ErrorInfo","ErrorTitle","h2","ErrorText","p","Error","error","to","FETCH_IMAGES_TRIGGER","FETCH_IMAGES_REQUEST","FETCH_IMAGES_SUCCESS","FETCH_IMAGES_FAILURE","createReducer","initialState","reducer","type","payload","Object","prototype","hasOwnProperty","call","dimensionsReducer","width","window","innerWidth","innerHeight","themeReducer","color","searchReducer","input","imagesReducer","toggle","status","imagesList","isError","persistConfig","storage","key","whitelist","combineReducers","dimensions","theme","search","images","rootReducer","persistReducer","axiosRetry","axios","retryDelay","exponentialDelay","makeImagesRequest","searchInput","a","get","headers","Authorization","process","params","query","data","imagesStart","source","CancelToken","put","results","response","message","request","code","cancelled","cancel","getImagesTrigger","takeLatest","imagesSaga","all","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","compose","applyMiddleware","store","createStore","persistor","persistStore","run","Theme","Home","lazy","connect","setDimensions","useEffect","handleResize","debounce","addEventListener","removeEventListener","fallback","exact","path","component","fadeIn","keyframes","GlobalStyles","createGlobalStyle","normalize","Root","StylesProvider","injectFirst","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04d300d2.chunk.js","sourcesContent":["import styled from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nexport const SpinnerOverlay = styled.div`\n  height: 60vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 5rem;\n  height: 5rem;\n  border: 0.3rem solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport { SpinnerOverlay, SpinnerContainer } from './spinner.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst Spinner = () => (\n  <SpinnerOverlay>\n    <SpinnerContainer />\n  </SpinnerOverlay>\n);\n\n/* -------------------------------------------------------------------------- */\n\nexport default Spinner;\n","export const ON_SEARCH_CHANGE = 'ON_SEARCH_CHANGE';\n","import React, { Component } from 'react';\n\nimport Error from 'components/error/error.component';\n\n/* -------------------------------------------------------------------------- */\n\nclass ErrorBoundary extends Component {\n  state = {\n    hasErrored: false,\n  };\n\n  // Catch error in any of the children\n  static getDerivedStateFromError() {\n    return { hasErrored: true };\n  }\n\n  // Access to error and error info\n  // componentDidCatch(error, info) {}\n\n  render() {\n    const { hasErrored } = this.state;\n    const { children } = this.props;\n\n    // Check whether or not have error throught hasErrored state\n    if (hasErrored) {\n      return <Error height=\"60vh\" />;\n    }\n\n    return children;\n  }\n}\n\n/* -------------------------------------------------------------------------- */\n\nexport default ErrorBoundary;\n","module.exports = __webpack_public_path__ + \"static/media/error.385f57c6.png\";","import styled from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nexport const ErrorContainer = styled.div`\n  height: ${({ height }) => height || '100vh'};\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    font-size: 1.4rem;\n    letter-spacing: 0.1rem;\n    color: gray;\n\n    :hover {\n      font-weight: bold;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    padding: 10px;\n\n    a {\n      font-size: 1.2rem;\n    }\n  }\n`;\n\nexport const ErrorImage = styled.div`\n  display: inline-block;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n  background-size: cover;\n  background-position: center;\n  width: 40vh;\n  height: 40vh;\n`;\n\nexport const ErrorInfo = styled.div`\n  color: #226fab;\n  text-align: center;\n`;\n\nexport const ErrorTitle = styled.h2`\n  font-size: 2.5rem;\n  letter-spacing: 0.3rem;\n  margin-bottom: 2rem;\n\n  @media screen and (max-width: 800px) {\n    font-size: 2rem;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  font-size: 2rem;\n  letter-spacing: 0.1rem;\n  margin-bottom: 2rem;\n\n  @media screen and (max-width: 800px) {\n    font-size: 1.5rem;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport error from 'assets/images/error.png';\n\nimport { ErrorContainer, ErrorImage, ErrorInfo, ErrorTitle, ErrorText } from './error.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst Error = ({ height }) => (\n  <ErrorContainer height={height}>\n    <ErrorImage imageUrl={error} />\n\n    <ErrorInfo>\n      <ErrorTitle>Sorry, this page isn&apos;t available.</ErrorTitle>\n      <ErrorText>The link you followed may be broken, or the page may have been removed.</ErrorText>\n      <Link to=\"/\">Go back to Home Page</Link>\n    </ErrorInfo>\n  </ErrorContainer>\n);\n\n/* -------------------------------------------------------------------------- */\n\nError.propTypes = {\n  height: PropTypes.string,\n};\n\nexport default Error;\n","export const FETCH_IMAGES_TRIGGER = 'FETCH_IMAGES_TRIGGER';\n\nexport const FETCH_IMAGES_REQUEST = 'FETCH_IMAGES_START';\n\nexport const FETCH_IMAGES_SUCCESS = 'FETCH_IMAGES_SUCCESS';\n\nexport const FETCH_IMAGES_FAILURE = 'FETCH_IMAGES_FAILURE';\n","export const createReducer = (initialState, reducer) => (state = initialState, { type, payload }) => {\n  return Object.prototype.hasOwnProperty.call(reducer, type)\n    ? typeof reducer[type] === 'function'\n      ? reducer[type](state, payload)\n      : reducer[type]\n    : state;\n};\n","import { createReducer } from 'redux/create-reducer';\n\nimport { SET_DIMENSIONS } from './dimensions.types';\n\n/* -------------------------------------------------------------------------- */\n\nconst initialState = {\n  width: window.innerWidth,\n  height: window.innerHeight,\n};\n\nconst reducer = {\n  [SET_DIMENSIONS]: (state, { width, height }) => ({ ...state, width, height }),\n};\n\nexport const dimensionsReducer = createReducer(initialState, reducer);\n","export const SET_DIMENSIONS = 'SET_DIMENSIONS';\n","import { createReducer } from 'redux/create-reducer';\n\nimport { TOGGLE_THEME } from './theme.types';\n\n/* -------------------------------------------------------------------------- */\n\nconst initialState = {\n  color: 'light',\n};\n\nconst reducer = {\n  [TOGGLE_THEME]: state => ({ ...state, color: state.color === 'light' ? 'dark' : 'light' }),\n};\n\nexport const themeReducer = createReducer(initialState, reducer);\n","export const TOGGLE_THEME = 'TOGGLE_THEME';\n","import { createReducer } from 'redux/create-reducer';\n\nimport { ON_SEARCH_CHANGE } from './search.types';\n\n/* -------------------------------------------------------------------------- */\n\nconst initialState = {\n  input: '',\n};\n\nconst reducer = {\n  [ON_SEARCH_CHANGE]: (state, payload) => ({ ...state, input: payload }),\n};\n\nexport const searchReducer = createReducer(initialState, reducer);\n","import { createReducer } from 'redux/create-reducer';\n\nimport { FETCH_IMAGES_REQUEST, FETCH_IMAGES_SUCCESS, FETCH_IMAGES_FAILURE } from './images.types';\n\n/* -------------------------------------------------------------------------- */\n\nconst initialState = {\n  toggle: 'off',\n  status: false,\n  imagesList: [],\n  isError: false,\n  error: {},\n};\n\nconst reducer = {\n  [FETCH_IMAGES_REQUEST]: state => ({\n    ...state,\n    toggle: 'on',\n    status: false,\n    imagesList: [],\n    isError: false,\n    error: {},\n  }),\n  [FETCH_IMAGES_SUCCESS]: (state, payload) => ({\n    ...state,\n    status: true,\n    imagesList: payload,\n  }),\n  [FETCH_IMAGES_FAILURE]: (state, payload) => ({\n    ...state,\n    status: true,\n    isError: true,\n    error: payload,\n  }),\n};\n\nexport const imagesReducer = createReducer(initialState, reducer);\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { dimensionsReducer } from 'redux/dimensions/dimensions.reducer';\nimport { themeReducer } from 'redux/theme/theme.reducer';\nimport { searchReducer } from 'redux/search/search.reducer';\nimport { imagesReducer } from 'redux/images/images.reducer';\n\n/* -------------------------------------------------------------------------- */\n\nconst persistConfig = {\n  storage,\n  key: 'root',\n  whitelist: ['theme'],\n};\n\nconst reducer = combineReducers({\n  dimensions: dimensionsReducer,\n  theme: themeReducer,\n  search: searchReducer,\n  images: imagesReducer,\n});\n\nexport const rootReducer = persistReducer(persistConfig, reducer);\n","import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\nimport { IMAGES_URL } from 'config/consts';\n\n/* -------------------------------------------------------------------------- */\n\n// Exponential back-off retry delay between requests\naxiosRetry(axios, { retryDelay: axiosRetry.exponentialDelay });\n\nexport const makeImagesRequest = async searchInput => {\n  const { data } = await axios.get(IMAGES_URL, {\n    headers: {\n      Authorization: `Client-ID ${process.env.REACT_APP_UNSPLASH_API}`,\n    },\n    params: { query: searchInput },\n  });\n\n  return data;\n};\n","export const IMAGES_URL = 'https://api.unsplash.com/search/photos';\n\nexport const LOADER_DELAY = 0;\n\nexport const FETCH_TIMEOUT = 10000;\n","import { takeLatest, all, call, put, cancelled } from 'redux-saga/effects';\n\nimport { CancelToken } from 'axios';\n\nimport { makeImagesRequest } from 'api/api';\n\nimport { FETCH_IMAGES_TRIGGER, FETCH_IMAGES_REQUEST, FETCH_IMAGES_SUCCESS, FETCH_IMAGES_FAILURE } from './images.types';\n\n/* -------------------------------------------------------------------------- */\n\nconst imagesStart = function*({ payload }) {\n  const source = CancelToken.source();\n\n  yield put({ type: FETCH_IMAGES_REQUEST });\n\n  try {\n    const data = yield call(makeImagesRequest, payload);\n\n    yield put({ type: FETCH_IMAGES_SUCCESS, payload: data.results });\n  } catch (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      yield put({ type: FETCH_IMAGES_FAILURE, payload: { ...error, message: 'Response Error !' } });\n    } else if (error.request) {\n      // The request was made but no response was received\n      error.code === 'ECONNABORTED'\n        ? yield put({ type: FETCH_IMAGES_FAILURE, payload: { ...error, message: 'Network Timeout !' } })\n        : yield put({ type: FETCH_IMAGES_FAILURE, payload: { ...error, message: 'Network Error !' } });\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      yield put({ type: FETCH_IMAGES_FAILURE, payload: { ...error, message: 'Error!' } });\n    }\n  } finally {\n    if (yield cancelled()) {\n      source.cancel();\n    }\n  }\n};\n\nconst getImagesTrigger = function*() {\n  yield takeLatest(FETCH_IMAGES_TRIGGER, imagesStart);\n};\n\n/* -------------------------------------------------------------------------- */\n\nexport const imagesSaga = function*() {\n  yield all([call(getImagesTrigger)]);\n};\n","import { all, call } from 'redux-saga/effects';\n\nimport { imagesSaga } from 'redux/images/images.sagas';\n\n/* -------------------------------------------------------------------------- */\n\nexport const rootSaga = function*() {\n  yield all([call(imagesSaga)]);\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore } from 'redux-persist';\n\nimport { rootReducer } from 'redux/root-reducer';\nimport { rootSaga } from 'redux/root-saga';\n\n/* -------------------------------------------------------------------------- */\n\n// Setup redux-saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n// List of middlewares\nconst middlewares = [sagaMiddleware];\n\n// Setup Redux DevTools only in development mode\nconst enhancer =\n  process.env.NODE_ENV === 'development'\n    ? composeWithDevTools(applyMiddleware(...middlewares))\n    : compose(applyMiddleware(...middlewares));\n\nexport const store = createStore(rootReducer, enhancer);\n\nexport const persistor = persistStore(store);\n\n// Run Redux Saga\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\n\nimport { ThemeProvider } from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nconst theme = {};\n\nconst Theme = ({ children }) => <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n\n/* -------------------------------------------------------------------------- */\n\nexport default Theme;\n","import React, { useEffect, Suspense, lazy } from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { setDimensions } from 'redux/dimensions/dimensions.actions';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport ErrorBoundary from 'components/error-boundary/error-boundary.component';\nimport Spinner from 'components/spinner/spinner.component';\n\nimport { debounce } from 'lodash-es';\n\n/* -------------------------------------------------------------------------- */\n\nconst Home = lazy(() => import('pages/home/home.page'));\nconst Error = lazy(() => import('components/error/error.component'));\n\nconst App = ({ setDimensions }) => {\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }, 1000);\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [setDimensions]);\n\n  return (\n    <>\n      <ErrorBoundary>\n        <Suspense fallback={<Spinner />}>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n\n            {/* No match Page */}\n            <Route path=\"*\" component={Error} />\n          </Switch>\n        </Suspense>\n      </ErrorBoundary>\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nApp.propTypes = {\n  setDimensions: PropTypes.func,\n};\n\nexport default connect(null, { setDimensions })(App);\n","import { SET_DIMENSIONS } from './dimensions.types';\n\n/* -------------------------------------------------------------------------- */\n\nexport const setDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  payload: dimensions,\n});\n","import { createGlobalStyle, keyframes } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\n/* -------------------------------------------------------------------------- */\n\nconst fadeIn = keyframes`\n  from {\n      opacity: 0;\n  }\n\n  to {\n      opacity: 1;\n  }\n`;\n\nexport const GlobalStyles = createGlobalStyle`\n  ${normalize}\n\n  *,\n  *::before,\n  *::after {\n    margin: 0;\n    padding: 0;\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: 62.5%;\n    box-sizing: border-box;\n    scroll-behavior: smooth;\n    background: transparent;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    font-family: 'Courier New', Courier, monospace, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    animation: ${fadeIn} 1s ease;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`;\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from 'redux/store';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { StylesProvider } from '@material-ui/core/styles';\n\nimport Theme from 'config/theme';\n\nimport App from 'containers/app/app.container';\n\nimport { GlobalStyles } from 'utils/styles/global-styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst Root = () => (\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <Theme>\n        <GlobalStyles />\n\n        <Router>\n          <StylesProvider injectFirst>\n            <App />\n          </StylesProvider>\n        </Router>\n      </Theme>\n    </PersistGate>\n  </Provider>\n);\n\n/* -------------------------------------------------------------------------- */\n\nexport default Root;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Root from 'config/root';\n\n/* -------------------------------------------------------------------------- */\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}