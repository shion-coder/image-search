{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/image/image.styles.js","components/image/image.component.jsx","components/images-list/images-list.styles.js","components/images-list/images-list.component.jsx"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","ImageContainer","styled","div","React","memo","imageDetail","urls","description","imageRef","useRef","useState","imageSpans","setImageSpans","useEffect","current","addEventListener","height","spans","Math","ceil","style","gridRowEnd","ref","src","regular","alt","ImagesListContainer","ImagesNotFound","p","mapStateToProps","createStructuredSelector","images","selectImagesList","responseStatus","selectImagesStatus","isError","selectImagesIsError","error","selectImagesError","connect","map","image","key","id","message"],"mappings":"yKAAe,SAASA,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,ECHM,SAASE,EAAeN,EAAKG,GAC1C,OCLa,SAAyBH,GACtC,GAAIK,MAAME,QAAQP,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKG,GACjD,GAAsB,qBAAXK,QAA4BA,OAAOC,YAAYC,OAAOV,GAAjE,CACA,IAAIW,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKjB,EAAIQ,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETlB,GAAKQ,EAAKT,SAAWC,GAH8CS,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBX,EAAKG,IGJ3C,SAAqCoB,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIf,OAAOgB,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBpB,MAAM2B,KAAKP,GACxC,cAANA,GAAqB,2CAA2CQ,KAAKR,GAAW,EAAiBF,EAAGC,QAAxG,GHF8D,CAA2BxB,EAAKG,IILjF,WACb,MAAM,IAAI+B,UAAU,6IJIgF,G,6LKD/F,IAAMC,EAAiBC,UAAOC,IAAV,KC+BZC,MAAMC,MA5BP,SAAC,GAA4C,IAAD,IAAzCC,YAAeC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,YAC9BC,EAAWC,mBADuC,IAEpBC,mBAAS,GAFW,GAEjDC,EAFiD,KAErCC,EAFqC,KAexD,OAXAC,qBAAU,WAQRL,EAASM,QAAQC,iBAAiB,QAPjB,WAAO,IACdC,EAAWR,EAASM,QAApBE,OACFC,EAAQC,KAAKC,KAAKH,EAAS,GAAK,EAEtCJ,EAAcK,QAIf,CAACT,IAGF,kBAACR,EAAD,CAAgBoB,MAAO,CAAEC,WAAW,QAAD,OAAUV,KAC3C,yBAAKW,IAAKd,EAAUe,IAAKjB,EAAKkB,QAASC,IAAKlB,Q,2aCpB3C,IAAMmB,EAAsBzB,UAAOC,IAAV,KAYnByB,EAAiB1B,UAAO2B,EAAV,KCGrBC,EAAkBC,YAAyB,CAC/CC,OAAQC,IACRC,eAAgBC,IAChBC,QAASC,IACTC,MAAOC,MA4BMC,sBAAQV,EAARU,EAzBG,SAAC,GAAgD,IAA9CR,EAA6C,EAA7CA,OAAQE,EAAqC,EAArCA,eAAgBE,EAAqB,EAArBA,QAASE,EAAY,EAAZA,MACpD,OAAON,EAAOhE,OACZ,kBAAC2D,EAAD,KACGK,EAAOS,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,CAAOC,IAAKD,EAAME,GAAItC,YAAaoC,QAGrCR,IAAmBE,EACrB,kBAACR,EAAD,uBACEQ,EACF,kBAACR,EAAD,KAAiBU,EAAMO,SAEvB,kBAAC,IAAD","file":"static/js/4.30e7f56d.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nexport const ImageContainer = styled.div`\n  :hover {\n    cursor: pointer;\n    transform: scale(1.2);\n    transition: transform 2s;\n  }\n`;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ImageContainer } from './image.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst Image = ({ imageDetail: { urls, description } }) => {\n  const imageRef = useRef();\n  const [imageSpans, setImageSpans] = useState(0);\n\n  useEffect(() => {\n    const setSpans = () => {\n      const { height } = imageRef.current;\n      const spans = Math.ceil(height / 1) + 9;\n\n      setImageSpans(spans);\n    };\n\n    imageRef.current.addEventListener('load', setSpans);\n  }, [imageRef]);\n\n  return (\n    <ImageContainer style={{ gridRowEnd: `span ${imageSpans}` }}>\n      <img ref={imageRef} src={urls.regular} alt={description} />\n    </ImageContainer>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nImage.propTypes = {\n  imageDetail: PropTypes.object,\n};\n\nexport default React.memo(Image);\n","import styled from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nexport const ImagesListContainer = styled.div`\n  margin-top: 1rem;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 0 10px;\n  grid-auto-rows: 1px;\n\n  img {\n    width: 100%;\n  }\n`;\n\nexport const ImagesNotFound = styled.p`\n  margin-top: 1rem;\n  text-align: center;\n  letter-spacing: 0.1rem;\n  font-size: 1.2rem;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  selectImagesList,\n  selectImagesStatus,\n  selectImagesIsError,\n  selectImagesError,\n} from 'redux/images/images.selectors';\n\nimport Image from 'components/image/image.component';\nimport Spinner from 'components/spinner/spinner.component';\n\nimport { ImagesListContainer, ImagesNotFound } from './images-list.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst mapStateToProps = createStructuredSelector({\n  images: selectImagesList,\n  responseStatus: selectImagesStatus,\n  isError: selectImagesIsError,\n  error: selectImagesError,\n});\n\nconst ImageList = ({ images, responseStatus, isError, error }) => {\n  return images.length ? (\n    <ImagesListContainer>\n      {images.map(image => (\n        <Image key={image.id} imageDetail={image} />\n      ))}\n    </ImagesListContainer>\n  ) : responseStatus && !isError ? (\n    <ImagesNotFound>Data Not Found</ImagesNotFound>\n  ) : isError ? (\n    <ImagesNotFound>{error.message}</ImagesNotFound>\n  ) : (\n    <Spinner />\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nImageList.propTypes = {\n  images: PropTypes.array,\n  responseStatus: PropTypes.bool,\n  isError: PropTypes.bool,\n  error: PropTypes.object,\n};\n\nexport default connect(mapStateToProps)(ImageList);\n"],"sourceRoot":""}